name: Build APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.27.1'
        channel: 'stable'

    - name: Create .env file
      run: |
        echo "TMDB_ACCESS_TOKEN=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYTc2MDk3MTlhNTYxYjM0MWM4MDYyYzMzN2FiZTM5NyIsIm5iZiI6MTc0NDI5MzUwOC4xMDQsInN1YiI6IjY3ZjdjZTg0MzE3NzUyNzZkNmQ5OTM4OCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.jB-LdCFKnX7xETXv3UgAHXffgoCOFK9wfyr6Z8y4AzI" > .env
        echo "SUBDL_API_KEY=l0cgAb7VNM_KMN2KwkLCFNuRsk8q3tEg" >> .env

    - name: Get dependencies
      run: flutter pub get

    - name: Generate code
      run: flutter packages pub run build_runner build --delete-conflicting-outputs
    
    - name: Create firebase_options.dart
      run: |
        cat > lib/firebase_options.dart << 'EOF'
        import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
        import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

        class DefaultFirebaseOptions {
          static FirebaseOptions get currentPlatform {
            if (kIsWeb) {
              return web;
            }
            switch (defaultTargetPlatform) {
              case TargetPlatform.android:
                return android;
              case TargetPlatform.iOS:
                return ios;
              case TargetPlatform.macOS:
                return macos;
              case TargetPlatform.windows:
                return windows;
              case TargetPlatform.linux:
                throw UnsupportedError(
                  'DefaultFirebaseOptions have not been configured for linux - '
                  'you can reconfigure this by running the FlutterFire CLI again.',
                );
              default:
                throw UnsupportedError(
                  'DefaultFirebaseOptions are not supported for this platform.',
                );
            }
          }

          static const FirebaseOptions web = FirebaseOptions(
            apiKey: 'dummy-api-key',
            appId: '1:dummy:web:dummy',
            messagingSenderId: 'dummy',
            projectId: 'dummy-project',
            authDomain: 'dummy-project.firebaseapp.com',
            storageBucket: 'dummy-project.appspot.com',
          );

          static const FirebaseOptions android = FirebaseOptions(
            apiKey: 'dummy-api-key',
            appId: '1:dummy:android:dummy',
            messagingSenderId: 'dummy',
            projectId: 'dummy-project',
            storageBucket: 'dummy-project.appspot.com',
          );

          static const FirebaseOptions ios = FirebaseOptions(
            apiKey: 'dummy-api-key',
            appId: '1:dummy:ios:dummy',
            messagingSenderId: 'dummy',
            projectId: 'dummy-project',
            storageBucket: 'dummy-project.appspot.com',
            iosBundleId: 'com.example.index',
          );

          static const FirebaseOptions macos = FirebaseOptions(
            apiKey: 'dummy-api-key',
            appId: '1:dummy:macos:dummy',
            messagingSenderId: 'dummy',
            projectId: 'dummy-project',
            storageBucket: 'dummy-project.appspot.com',
            iosBundleId: 'com.example.index',
          );

          static const FirebaseOptions windows = FirebaseOptions(
            apiKey: 'dummy-api-key',
            appId: '1:dummy:windows:dummy',
            messagingSenderId: 'dummy',
            projectId: 'dummy-project',
            authDomain: 'dummy-project.firebaseapp.com',
            storageBucket: 'dummy-project.appspot.com',
          );
        }
        EOF

    - name: Create dummy google-services.json
      run: |
        cat > android/app/google-services.json << 'EOF'
        {
          "project_info": {
            "project_number": "123456789",
            "project_id": "dummy-project",
            "storage_bucket": "dummy-project.appspot.com"
          },
          "client": [
            {
              "client_info": {
                "mobilesdk_app_id": "1:123456789:android:dummy",
                "android_client_info": {
                  "package_name": "com.mosesmbaga.index"
                }
              },
              "oauth_client": [
                {
                  "client_id": "dummy-client-id",
                  "client_type": 3
                }
              ],
              "api_key": [
                {
                  "current_key": "dummy-api-key"
                }
              ],
              "services": {
                "appinvite_service": {
                  "other_platform_oauth_client": [
                    {
                      "client_id": "dummy-client-id",
                      "client_type": 3
                    }
                  ]
                }
              }
            }
          ],
          "configuration_version": "1"
        }
        EOF

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk